version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: nestuser
      POSTGRES_PASSWORD: nestpass
      POSTGRES_DB: nestdb
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nestuser -d nestdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network  # NestJS Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=nestuser
      - DATABASE_PASSWORD=nestpass
      - DATABASE_NAME=nestdb
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - CLOUDINARY_CLOUD_NAME=cugia94
      - CLOUDINARY_API_KEY=725368927496298
      - CLOUDINARY_API_SECRET=wIwx-h_7EUYpVfTauBWw_p8YiiQ
      - GEMINI_API_KEY=AIzaSyAKrNgmZqifpUiaDdBTNTMZY1khuXIBhh8
    # Expose qua ports khác để tránh conflict
    ports:
      - "3002:3000"
    depends_on:
      db:
        condition: service_healthy
    # Không cần healthcheck vì app đã chạy tốt
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:3000/api || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 10s
    networks:
      - app-network
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8081:80"   # HTTP
      - "8444:443"  # HTTPS
    volumes:
      - ./nginx-vps.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # Mount SSL certificates
      - /etc/letsencrypt:/etc/letsencrypt:ro  # Mount Let's Encrypt certs (if using)
    depends_on:
      - app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
